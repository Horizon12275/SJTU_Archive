                            | #赵楷越 522031910803
                            | 
0x000:                      | .pos 0
0x000: 30f40004000000000000 | irmovq stack,%rsp
0x00a: 804800000000000000   | call main
0x013: 00                   | halt
                            | 
                            | # Sample linked list
0x018:                      | .align 8 
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a  # 第一个元素的值为0x00a
0x020: 2800000000000000     |     .quad ele2  # 下一个元素的地址为ele2
0x028:                      | ele2:
0x028: b000000000000000     |     .quad 0x0b0  
0x030: 3800000000000000     |     .quad ele3  
0x038:                      | ele3:
0x038: 000c000000000000     |     .quad 0xc00  
0x040: 0000000000000000     |     .quad 0  # 最后一个元素的地址为0，作为链表结束标记
                            | 
0x048:                      | main: 
0x048: 30f71800000000000000 |     irmovq ele1, %rdi  # 将链表的第一个节点的地址加载到%rdi
0x052: 805c00000000000000   |     call rsum_list
0x05b: 90                   |     ret
                            | 
0x05c:                      | rsum_list: 
0x05c: a06f                 |     pushq %rsi  # 保存寄存器%rsi的值，为了使调用完sum_list后%rsi的值不变
0x05e: 6300                 |     xorq %rax,%rax
                            | 
0x060:                      | loop:
0x060: 6277                 |     andq %rdi,%rdi  # 判断当前节点是否为链表的结束节点
0x062: 747600000000000000   |     jne recurse  # 如果不是结束节点，跳转到recurse       
0x06b: 6300                 |     xorq %rax,%rax # 如果是结束节点，返回0
0x06d: 709500000000000000   |     jmp end
                            | 
0x076:                      | recurse:  
0x076: 50670000000000000000 |     mrmovq (%rdi),%rsi  # 将当前节点的值加载到%rsi
0x080: 50770800000000000000 |     mrmovq 8(%rdi),%rdi  # 将%rdi指向下一个节点的地址
0x08a: 805c00000000000000   |     call rsum_list
0x093: 6060                 |     addq %rsi,%rax
                            | 
0x095:                      | end:
0x095: b06f                 |     popq %rsi  # 恢复寄存器%rsi的值
0x097: 90                   |     ret 
                            | 
0x400:                      | .pos 0x400
0x400:                      | stack:
